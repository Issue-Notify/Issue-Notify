import { type NextPage } from "next";
import Head from "next/head";
import { Octokit } from "octokit";

interface IssuesProps {
  issues: [];
}

const Issues: NextPage<IssuesProps> = ({ issues }) => {
  console.log(issues);

  return (
    <>
      <Head>
        <title>Issues</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>issues page</div>
    </>
  );
};

export default Issues;

export async function getServerSideProps() {
  const octokit = new Octokit({
    auth: process.env.GITHUB_PERSONAL_ACCESS_TOKEN,
  });

  const repos = [
    { owner: "EddieHubCommunity", repo: "LinkFree" },
    { owner: "excalidraw", repo: "excalidraw" },
  ];

  try {
    let issues: object[] = [];

    for (const { owner, repo } of repos) {
      const response = await octokit.request(
        "GET /repos/{owner}/{repo}/issues",
        {
          owner,
          repo,
        }
      );

      const issuesWithOutPullRequests = response.data.filter(
        (issue) => !issue.pull_request
      );

      issues = [...issues, ...issuesWithOutPullRequests];
    }

    return {
      props: { issues },
    };
  } catch (error) {
    console.log("Cannot fetch github issues ", error);
  }
}
